#
# CIP Core, generic profile
#
# Copyright (c) Siemens AG, 2019-2024
# Copyright (c) Toshiba Corporation, 2020
#
# Authors:
#  Jan Kiszka <jan.kiszka@siemens.com>
#  Quirin Gylstorff <quirin.gylstorff@siemens.com>
#  Nobuhiro Iwamatsu <nobuhiro1.iwamatsu@toshiba.co.jp>
#
# SPDX-License-Identifier: MIT
#

image: ghcr.io/siemens/kas/kas-isar:4.5

variables:
  GIT_STRATEGY: clone
  release: bookworm
  extension: none
  use_rt: enable
  encrypt: disable
  targz: enable
  dtb: none
  deploy: enable
  deploy_kernelci: disable
  build_swu_v2: disable
  swupdate_version: default
  test_function: swupdate

stages:
  - build
  - test
  - cve-check

default:
  before_script:
    - export http_proxy=$HTTP_PROXY
    - export https_proxy=$HTTPS_PROXY
    - export ftp_proxy=$FTP_PROXY
    - export no_proxy=$NO_PROXY
    - export AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
    - export AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
    - export DISTRO_APT_PREMIRRORS=$DISTRO_APT_PREMIRRORS

.build_base:
  stage: build
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: $CI_PIPELINE_SOURCE == "schedule"
      when: never
    - if: $CI_COMMIT_BRANCH != "master"
  tags:
    - large
  variables:
    base_yaml: "kas-cip.yml:kas/board/${target}.yml"
  script:
    - if [ "${use_rt}" = "enable" ]; then base_yaml="${base_yaml}:kas/opt/rt.yml"; fi
    - if [ "${extension}" != "none" ]; then base_yaml="${base_yaml}:kas/opt/${extension}.yml"; fi
    - if [ "${targz}" = "enable" ]; then base_yaml="${base_yaml}:kas/opt/targz.yml"; fi
    - if [ "${release}" = "buster" ]; then base_yaml="${base_yaml}:kas/opt/buster.yml"; fi
    - if [ "${release}" = "bullseye" ]; then base_yaml="${base_yaml}:kas/opt/bullseye.yml"; fi
    - if [ "${release}" = "bookworm" ]; then base_yaml="${base_yaml}:kas/opt/bookworm.yml"; fi
    - if [ "${release}" = "trixie" ]; then base_yaml="${base_yaml}:kas/opt/trixie.yml"; fi
    - if [ "${encrypt}" = "enable" ]; then base_yaml="${base_yaml}:kas/opt/encrypt-data.yml"; fi
    - if [ "${swupdate_version}" = "2022.12" ]; then base_yaml="${base_yaml}:kas/opt/swupdate-2022.12.yaml"; fi
    - echo "Building ${base_yaml}"
    - kas build ${base_yaml}
    - if [ "${deploy}" = "enable" ]; then scripts/deploy-cip-core.sh ${release} ${target} ${extension} ${dtb} ${CI_COMMIT_REF_SLUG} wic none; fi
    - if [ "${build_swu_v2}" = "enable" ]; then
          mkdir build/previous-image;
          if [ "${extension}" = "security" ] || [ "${extension}" = "ebg-secure-boot-snakeoil" ]; then
              cp build/tmp/deploy/images/${target}/*.verity build/previous-image;
          else
              cp build/tmp/deploy/images/${target}/*.squashfs build/previous-image;
          fi;
          echo "PV = \"2.0\"" >> recipes-core/images/cip-core-image-security.bb;
          if [ "${swu_type}" = "zchunk" ]; then
              sed -i -e 's@rdiff@zchunk@g' kas/opt/delta-update.yml;
              zchunk_url="http://localhost/artifacts/cip-core-image-${extension}-cip-core-${release}-${target}.zck";
              sed -ri "s|DELTA_ZCK_URL = \"\"|DELTA_ZCK_URL = \"${zchunk_url}\"|g" kas/opt/delta-update.yml;
          fi;
          kas build ${base_yaml}:kas/opt/delta-update.yml;
          scripts/deploy-cip-core.sh ${release} ${target} ${extension} ${dtb} ${CI_COMMIT_REF_SLUG} swu ${swu_type};
          if [ "${swu_type}" = "zchunk" ]; then
              scripts/deploy-cip-core.sh ${release} ${target} ${extension} ${dtb} ${CI_COMMIT_REF_SLUG} zck none;
          fi;
      fi
    - if [ "${deploy_kernelci}" = "enable" ]; then scripts/deploy-kernelci.py ${release} ${target} ${extension} ${dtb}; fi

build:qemu-amd64-base:
  extends:
    - .build_base
  variables:
    target: qemu-amd64
    extension: security
    use_rt: disable
    build_swu_v2: enable
    swu_type: zchunk
    release: trixie

build:qemu-arm64-base:
  extends:
    - .build_base
  variables:
    target: qemu-arm64
    extension: security
    use_rt: disable
    build_swu_v2: enable
    swu_type: zchunk
    release: trixie

build:qemu-arm-base:
  extends:
    - .build_base
  variables:
    target: qemu-arm
    extension: security
    use_rt: disable
    build_swu_v2: enable
    swu_type: zchunk
    release: trixie

include: '.reproducible-check-ci.yml'
