#!/bin/sh

set -e

PATH=$PATH:~/.local/bin

if ! which aws >/dev/null 2>&1; then
	echo "Installing awscli..."
	pip3 install wheel
	pip3 install awscli
fi

RELEASE=$1
TARGET=$2
EXTENSION=$3
NO_KERNEL=$4
DTB=$5
REF=$6
DEPLOY=$7

BASE_FILENAME=cip-core-image-cip-core-$RELEASE-$TARGET
if [ "${EXTENSION}" != "none" ]; then
	if [ "${EXTENSION}" = "security" ]; then
		BASE_FILENAME=cip-core-image-$EXTENSION-cip-core-$RELEASE-$TARGET
	else
		BASE_FILENAME=cip-core-image-cip-core-$RELEASE-$TARGET-$EXTENSION
	fi
fi

BASE_PATH=build/tmp/deploy/images/$TARGET/$BASE_FILENAME
S3_TARGET=s3://download2.cip-project.org/cip-core/$REF/$TARGET/

if [ "${NO_KERNEL}" = "enable" ]; then
	__BASE_PATH=${BASE_PATH}
	BASE_PATH="${BASE_PATH}-nokernel"

	echo "Rename from ${BASE_FILENAME}.* to ${BASE_FILENAME}-nokernel.*"

	if [ -f "${__BASE_PATH}.tar.gz" ]; then
		mv "${__BASE_PATH}.tar.gz" "${BASE_PATH}.tar.gz"
	fi
	if [ -f "${__BASE_PATH}.swu" ]; then
		mv "${__BASE_PATH}.swu" "${BASE_PATH}.swu"
	fi
	if [ -f "${__BASE_PATH}.wic" ]; then
		mv "${__BASE_PATH}.wic" "${BASE_PATH}.wic"
	fi
fi

if [ -f "${BASE_PATH}.wic" ]; then
	echo "Uploading artifacts..."
	if [ "$DEPLOY" = "swu" ]; then
		aws s3 cp --no-progress --acl public-read "${BASE_PATH}.swu" "${S3_TARGET}"
	else
		echo "Compressing $BASE_FILENAME.wic..."
		xz -9 -k -T0 "${BASE_PATH}.wic"
		aws s3 cp --no-progress --acl public-read "${BASE_PATH}.wic.xz" "${S3_TARGET}"

		if [ -f "build/tmp/deploy/images/$TARGET/firmware.bin" ]; then
			aws s3 cp --no-progress --acl public-read "build/tmp/deploy/images/$TARGET/firmware.bin" "${S3_TARGET}"
		fi
	fi
else
	if [ -f "${BASE_PATH}.tar.gz" ]; then
		echo "Uploading artifacts..."
		aws s3 cp --no-progress --acl public-read "${BASE_PATH}.tar.gz" "${S3_TARGET}"
	fi

	if [ "$NO_KERNEL" = "false" ]; then
		KERNEL_IMAGE="$BASE_PATH-vmlinu[xz]"
		# iwg20m workaround
		if [ -f "build/tmp/deploy/images/$TARGET/zImage" ]; then
			KERNEL_IMAGE=build/tmp/deploy/images/$TARGET/zImage
		fi

		# shellcheck disable=SC2086
		aws s3 cp --no-progress --acl public-read $KERNEL_IMAGE "${S3_TARGET}"
		aws s3 cp --no-progress --acl public-read "${BASE_PATH}-initrd.img" "${S3_TARGET}"

		if [ "$DTB" != "none" ]; then
			aws s3 cp --no-progress --acl public-read build/tmp/deploy/images/*/"$DTB" "${S3_TARGET}"
		fi
	fi
fi

# Deploy the dpkg status file (/var/lib/dpkg/status) to AWS for the CIP CVE checker (debian-cve-checker)
# to periodically extract and report pending CVEs.
# * CI builds will override the previous dpkg status files
# * AWS S3 bucket structure
#   * download.cip-project.org/cip-core/cve-checks/
#     * dpkg-status: folder to store the dpkg status files generated by the CI and released images
#     * cve-reports: folder to store the cve-reports generated from the dpkg status files
#       * they can be linked from the release website
DPKG_STATUS_FILENAME=${CI_JOB_NAME#build:}.dpkg_status

# As default release name is not included in CI_JOB_NAME, it is appended to dpkg status file name
# For further use in  run-cve-checks.sh script to get the right suite
if ! echo "$CI_JOB_NAME" | grep -q "$1"; then
	DPKG_STATUS_FILENAME=${CI_JOB_NAME#build:}-$1.dpkg_status
fi
aws s3 cp --no-progress build/tmp/deploy/images/"$TARGET"/cip-core-image-*.dpkg_status s3://download.cip-project.org/cip-core/cve-checks/dpkg-status/"$DPKG_STATUS_FILENAME"
