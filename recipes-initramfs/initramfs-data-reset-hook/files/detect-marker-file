#!/bin/sh
# Copyright (C) Siemens AG, 2025
#
# SPDX-License-Identifier: MIT
#
# This implementation check for a existing file to trigger
# the data reset. Prints 'true' in case the marker was found

check_for_reset_trigger() {
	marker="$(basename ${INITRAMFS_DATA_RESET_MARKER})"
	marker_storage_device="${INITRAMFS_DATA_RESET_MARKER_STORAGE_DEVICE}"
	storage_mnt="$(findmnt  --first-only --output TARGET --noheadings "${marker_storage_device}")"
	tmp_mount=$(mktemp -d)
	if [ -z "${storage_mnt}" ]; then
		if ! mount -t "$(get_fstype "${marker_storage_device}")" \
			 "${marker_storage_device}" \
			 "${tmp_mount}"; then
			panic "Can't mount ${marker_storage_device}!"
		fi
		storage_mnt="$tmp_mount"
	fi
	# check for marker
	if [ -e "${storage_mnt}/${marker}" ]; then
		echo "true"
		# delete marker
		rm "${storage_mnt}/${marker}"
	fi
	if mountpoint -q "$tmp_mount"; then
		umount "$tmp_mount"
	fi
	rmdir "$tmp_mount"
}

